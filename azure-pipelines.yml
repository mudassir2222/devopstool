trigger:
  - main  # Adjust the branch as needed

pool:
  name: 'default'  # Set to default agent pool

steps:
# Set JAVA_HOME and PATH to use the existing JDK
- script: |
    echo "##vso[task.setvariable variable=JAVA_HOME]$JAVA_HOME"
    echo "##vso[task.setvariable variable=PATH]$JAVA_HOME/bin:$PATH"
  displayName: 'Set JAVA_HOME and PATH'

# Maven build step
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'  # Root-level `pom.xml` as per your structure
    options: '-X'
    goals: 'clean install -DskipTests'
    publishJUnitResults: true
    javaHomeOption: 'Path'
    jdkVersionOption: '17'
    jdkUserInputPath: '/usr/lib/jvm/java-17-openjdk-amd64'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: true
    sqMavenPluginVersionChoice: 'latest'

# Docker build and push to ACR
- task: Docker@2
  inputs:
    command: 'buildAndPush'
    repository: 'samrg.azurecr.io/devopstool'  # Replace <ACRName> with your actual ACR name
    dockerfile: 'Dockerfile'  # Root-level Dockerfile
    containerRegistry: 'md-service-connection-docker'  # Replace with your ACR service connection name
    tags: |
      latest-$(Build.BuildId)

# Install zip utility for archiving
- script: |
    sudo apt-get update
    sudo apt-get install -y zip
  displayName: 'Install zip utility'

# Archive build artifacts
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

# Deploy service using custom YAML if needed
- script: |
    kubectl apply -f deploymentservice.yaml
    kubectl apply -f deploysvc.yaml
  displayName: 'Deploy service'
